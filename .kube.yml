apiVersion: v1
kind: Service
metadata:
  name: "{{.app}}"
spec:
  selector:
    app: "{{.app}}"
    tier: "{{.tier}}"
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{.app}}"
    tier: "{{.tier}}"
  name: "{{.app}}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{.app}}"
      tier: frontend
  template:
    metadata:
      labels:
        app: "{{.app}}"
        tier: frontend
    spec:
      containers:
        - image: "{{.image}}"
          # imagePullPolicy: IfNotPresent
          name: "{{.app}}"
          ports:
            - containerPort: 80
              protocol: TCP
          # volumeMounts:
          # - mountPath: /usr/src/api/config.js
          #   name: projects-config
          #   subPath: config.js
      terminationGracePeriodSeconds: 30
      # volumes:
      # - name: projects-config
      #   configMap:
      #     name: projects-config
  minReadySeconds: 20
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
